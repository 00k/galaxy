
package galaxy;

import "galaxy.proto"

option cc_generic_services = true;

enum MasterCommandType {
    HEART_BEAT = 0,
    // Task control
    LAUNCH_TASK = 1,
    KILL_TASK = 2,
    CLEAN_TASK = 3,     // before GC time, agent should be clean without command ?
    // Container Control
    CREATE_CONTAINER = 4,   
    DESTORY_CONTAINER = 5,
    UPDATE_CONTAINER = 6
};

message LaunchTaskRequest {
    optional TaskId task_id = 1;    
    optional TaskInfo task_info = 2;
    repeated ResourceItem resource_items = 3;
}

message KillTaskRequest {
    optional TaskId task_id = 1;
}

message HeartBeatRequest {
    optional int64 id = 1;      // id for communicate
    optional AgentId agent_id = 2;
    optional AgentInfo agent_info = 3;
    optional AgentStatus agent_status = 4;
    repeated TaskStatus task_status_list = 5;
    repeated ResourceUsage container_resource_usage = 6;
    optional ResourceUsage host_resource_usage = 7;
}

message HeartBeatResponse {
    optional int64 id = 1;
    optional MasterCommandType = 2 [default = HEART_BEAT];
    optional LaunchTaskRequest launch_task_request = 3;
    optional KillTaskRequest kill_task_request = 4;
}

service Master {
    rpc HeartBeat(HeartBeatRequest) returns(HeartBeatResponse);
}

