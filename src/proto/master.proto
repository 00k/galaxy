
package galaxy;

import "task.proto";

option cc_generic_services = true;

enum MasterCommandType {
    HEART_BEAT = 0;
    // Task control
    LAUNCH_TASK = 1;
    KILL_TASK = 2;
    CLEAN_TAKS = 3;     // before GC time, agent should be clean without command ?
    // Container Control
    CREATE_CONTAINER = 4;   
    DESTORY_CONTAINER = 5;
    UPDATE_CONTAINER = 6;
}

message LaunchTaskRequest {
    optional int64 task_id = 1;
    optional TaskInfo task_info = 2;
}

message KillTaskRequest {
    optional int64 task_id = 1;
}

message HeartBeatRequest {
    optional int64 seq_id = 1;      // id for communicate
    optional int64 agent_id = 2;
    optional string agent_addr = 3;
    repeated ResourceItem total_resource_list = 4;
    repeated ResourceItem used_resource_list = 5;
    repeated TaskStatus task_status = 6;
}

message HeartBeatResponse {
    optional int64 seq_id = 1;
    optional int32 status = 2;
    optional MasterCommandType = 3 [default = HEART_BEAT];
    optional LaunchTaskRequest launch_task_request = 4;
    optional KillTaskRequest kill_task_request = 5;
}

message NewTaskRequest {
    optional string task_name = 2;
    optional bytes task_raw = 3;
    optional string cmd_line = 4;
    optional int32 replic_count = 5;
}

message NewTaskResponse {
    optional int32 status = 2;
}

service Master {
    rpc HeartBeat(HeartBeatRequest) returns(HeartBeatResponse);
    rpc NewTask(NewTaskRequest) returns(NewTaskResponse);
}

